{"ast":null,"code":"var _jsxFileName = \"/Users/lilian/WebstormProjects/investissement-crypto/frontend/src/components/MonthlyProfitChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MonthlyProfitChart({\n  stats\n}) {\n  if (!stats || !stats.plus_values_mensuelles) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Plus-values mensuelles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune donn\\xE9e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n  const labels = stats.plus_values_mensuelles.map(item => item.month);\n  const values = stats.plus_values_mensuelles.map(item => item.profit.toFixed(2));\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Profit mensuel (USD)',\n      data: values,\n      backgroundColor: '#4caf50'\n    }]\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Mois'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Plus-value (USD)'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Plus-values mensuelles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options,\n      redraw: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = MonthlyProfitChart;\nexport default MonthlyProfitChart;\nvar _c;\n$RefreshReg$(_c, \"MonthlyProfitChart\");","map":{"version":3,"names":["React","Bar","jsxDEV","_jsxDEV","MonthlyProfitChart","stats","plus_values_mensuelles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","item","month","values","profit","toFixed","data","datasets","label","backgroundColor","options","plugins","legend","display","scales","x","title","text","y","redraw","_c","$RefreshReg$"],"sources":["/Users/lilian/WebstormProjects/investissement-crypto/frontend/src/components/MonthlyProfitChart.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nfunction MonthlyProfitChart({ stats }) {\n    if (!stats || !stats.plus_values_mensuelles) {\n        return <div className=\"chart\"><h3>Plus-values mensuelles</h3><p>Aucune donn√©e</p></div>;\n    }\n    const labels = stats.plus_values_mensuelles.map(item => item.month);\n    const values = stats.plus_values_mensuelles.map(item => item.profit.toFixed(2));\n    const data = {\n        labels: labels,\n        datasets: [{\n            label: 'Profit mensuel (USD)',\n            data: values,\n            backgroundColor: '#4caf50'\n        }]\n    };\n    const options = {\n        plugins: {\n            legend: { display: false }\n        },\n        scales: {\n            x: { title: { display: true, text: 'Mois' } },\n            y: { title: { display: true, text: 'Plus-value (USD)' } }\n        }\n    };\n    return (\n        <div className=\"chart\">\n            <h3>Plus-values mensuelles</h3>\n            <Bar data={data} options={options} redraw />\n        </div>\n    );\n}\n\nexport default MonthlyProfitChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,kBAAkBA,CAAC;EAAEC;AAAM,CAAC,EAAE;EACnC,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,sBAAsB,EAAE;IACzC,oBAAOH,OAAA;MAAKI,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAACL,OAAA;QAAAK,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAAAT,OAAA;QAAAK,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3F;EACA,MAAMC,MAAM,GAAGR,KAAK,CAACC,sBAAsB,CAACQ,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;EACnE,MAAMC,MAAM,GAAGZ,KAAK,CAACC,sBAAsB,CAACQ,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/E,MAAMC,IAAI,GAAG;IACTP,MAAM,EAAEA,MAAM;IACdQ,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE,sBAAsB;MAC7BF,IAAI,EAAEH,MAAM;MACZM,eAAe,EAAE;IACrB,CAAC;EACL,CAAC;EACD,MAAMC,OAAO,GAAG;IACZC,OAAO,EAAE;MACLC,MAAM,EAAE;QAAEC,OAAO,EAAE;MAAM;IAC7B,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QAAEC,KAAK,EAAE;UAAEH,OAAO,EAAE,IAAI;UAAEI,IAAI,EAAE;QAAO;MAAE,CAAC;MAC7CC,CAAC,EAAE;QAAEF,KAAK,EAAE;UAAEH,OAAO,EAAE,IAAI;UAAEI,IAAI,EAAE;QAAmB;MAAE;IAC5D;EACJ,CAAC;EACD,oBACI5B,OAAA;IAAKI,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBL,OAAA;MAAAK,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BT,OAAA,CAACF,GAAG;MAACmB,IAAI,EAAEA,IAAK;MAACI,OAAO,EAAEA,OAAQ;MAACS,MAAM;IAAA;MAAAxB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd;AAACsB,EAAA,GA7BQ9B,kBAAkB;AA+B3B,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}