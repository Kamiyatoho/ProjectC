{"ast":null,"code":"var _jsxFileName = \"/Users/lilian/WebstormProjects/investissement-crypto/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CryptoTable from './components/CryptoTable';\nimport PortfolioValueChart from './components/PortfolioValueChart';\nimport DistributionChart from './components/DistributionChart';\nimport MonthlyProfitChart from './components/MonthlyProfitChart';\nimport TaxInfo from './components/TaxInfo';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [taxes, setTaxes] = useState(null);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  // Fonction de synchronisation des donnÃ©es depuis le backend\n  const handleSync = async () => {\n    setLoading(true);\n    setErrorMsg('');\n    try {\n      // Appel Ã  lâ€™endpoint de synchronisation\n      const syncResp = await fetch('/api/sync', {\n        method: 'POST'\n      });\n      if (!syncResp.ok) {\n        throw new Error('Erreur lors de la synchronisation');\n      }\n      // Une fois la sync effectuÃ©e, rÃ©cupÃ©rer les donnÃ©es pour mise Ã  jour du state\n      const [portfolioResp, statsResp, taxesResp] = await Promise.all([fetch('/api/portfolio'), fetch('/api/stats'), fetch('/api/taxes')]);\n      if (!portfolioResp.ok || !statsResp.ok || !taxesResp.ok) {\n        throw new Error('Erreur lors de la rÃ©cupÃ©ration des donnÃ©es');\n      }\n      const portfolioData = await portfolioResp.json();\n      const statsData = await statsResp.json();\n      const taxesData = await taxesResp.json();\n      setPortfolio(portfolioData);\n      setStats(statsData);\n      setTaxes(taxesData);\n      setDataLoaded(true);\n    } catch (error) {\n      console.error('Sync error:', error);\n      setErrorMsg(\"La synchronisation a Ã©chouÃ©. VÃ©rifiez la connexion API.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Suivi d\\u2019investissement Crypto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sync-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSync,\n        disabled: loading,\n        className: \"sync-button\",\n        children: loading ? 'Synchronisation...' : 'ðŸ”„ Synchroniser'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-msg\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), dataLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CryptoTable, {\n        portfolio: portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-container\",\n        children: [/*#__PURE__*/_jsxDEV(PortfolioValueChart, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DistributionChart, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MonthlyProfitChart, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TaxInfo, {\n        taxes: taxes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hint\",\n      children: \"Cliquez sur \\xAB\\xA0Synchroniser\\xA0\\xBB pour charger les donn\\xE9es de Binance.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"YgTdgB1KY3hkKpavo3GvePWq9wc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CryptoTable","PortfolioValueChart","DistributionChart","MonthlyProfitChart","TaxInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","portfolio","setPortfolio","stats","setStats","taxes","setTaxes","dataLoaded","setDataLoaded","loading","setLoading","errorMsg","setErrorMsg","handleSync","syncResp","fetch","method","ok","Error","portfolioResp","statsResp","taxesResp","Promise","all","portfolioData","json","statsData","taxesData","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/lilian/WebstormProjects/investissement-crypto/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CryptoTable from './components/CryptoTable';\nimport PortfolioValueChart from './components/PortfolioValueChart';\nimport DistributionChart from './components/DistributionChart';\nimport MonthlyProfitChart from './components/MonthlyProfitChart';\nimport TaxInfo from './components/TaxInfo';\n\nfunction App() {\n  const [portfolio, setPortfolio] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [taxes, setTaxes] = useState(null);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  // Fonction de synchronisation des donnÃ©es depuis le backend\n  const handleSync = async () => {\n    setLoading(true);\n    setErrorMsg('');\n    try {\n      // Appel Ã  lâ€™endpoint de synchronisation\n      const syncResp = await fetch('/api/sync', { method: 'POST' });\n      if (!syncResp.ok) {\n        throw new Error('Erreur lors de la synchronisation');\n      }\n      // Une fois la sync effectuÃ©e, rÃ©cupÃ©rer les donnÃ©es pour mise Ã  jour du state\n      const [portfolioResp, statsResp, taxesResp] = await Promise.all([\n        fetch('/api/portfolio'),\n        fetch('/api/stats'),\n        fetch('/api/taxes')\n      ]);\n      if (!portfolioResp.ok || !statsResp.ok || !taxesResp.ok) {\n        throw new Error('Erreur lors de la rÃ©cupÃ©ration des donnÃ©es');\n      }\n      const portfolioData = await portfolioResp.json();\n      const statsData = await statsResp.json();\n      const taxesData = await taxesResp.json();\n      setPortfolio(portfolioData);\n      setStats(statsData);\n      setTaxes(taxesData);\n      setDataLoaded(true);\n    } catch (error) {\n      console.error('Sync error:', error);\n      setErrorMsg(\"La synchronisation a Ã©chouÃ©. VÃ©rifiez la connexion API.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n      <div className=\"App\">\n        <header>\n          <h1>Suivi dâ€™investissement Crypto</h1>\n        </header>\n\n        <div className=\"sync-section\">\n          <button onClick={handleSync} disabled={loading} className=\"sync-button\">\n            {loading ? 'Synchronisation...' : 'ðŸ”„ Synchroniser'}\n          </button>\n          {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\n        </div>\n\n        {dataLoaded ? (\n            <>\n              {/* Tableau du portefeuille par crypto */}\n              <CryptoTable portfolio={portfolio} />\n\n              {/* Section des graphiques */}\n              <div className=\"charts-container\">\n                <PortfolioValueChart stats={stats} />\n                <DistributionChart stats={stats} />\n                <MonthlyProfitChart stats={stats} />\n              </div>\n\n              {/* Section information impÃ´t */}\n              <TaxInfo taxes={taxes} />\n            </>\n        ) : (\n            <p className=\"hint\">Cliquez sur Â«Â SynchroniserÂ Â» pour charger les donnÃ©es de Binance.</p>\n        )}\n      </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}